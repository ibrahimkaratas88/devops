---
- hosts: role_master${TF_VAR_PROJECT_IDENTIFIER}
  become: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:

  - name: copy cloud-controller manager manifest files
    copy: 
      src: ./k8s/cloud-controller-manager
      dest: /home/ubuntu/

  - name: Deploy the required RBAC and the cloud-controller-manager - Install Helm
    args:
      executable: /bin/bash
    shell: |
      cd /home/ubuntu
      curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
      chmod 777 get_helm.sh
      ./get_helm.sh --version v3.7.1
      kubectl apply -f ./cloud-controller-manager

  - name: copy the cluster autoscaler manifest files
    copy: 
      src: ./k8s/cluster-autoscaler.yml
      dest: /home/ubuntu/

  - name: Deploy Cluster Autoscaler and Nginx Ingress Controller
    shell: |
      kubectl apply -f /home/ubuntu/cluster-autoscaler.yml
      helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
      helm repo update
      helm install ingress-controller ingress-nginx/ingress-nginx

  - name: Deploy AWS CSI Driver
    become: false
    shell: kubectl apply -k "github.com/kubernetes-sigs/aws-ebs-csi-driver/deploy/kubernetes/overlays/stable"
    
  - name: copy metrics-server.yml into remote
    copy: 
      src: ./k8s/metrics-server.yml
      dest: /home/ubuntu/

  - name: Deploy Metrics Server
    become: false
    shell: kubectl apply -f /home/ubuntu/metrics-server.yml

  - name: copy ClusterIssuer Manifest File
    copy: 
      src: ./k8s/tls-cluster-issuer-prod.yml
      dest: /home/ubuntu/

  - name: Deploy cert-manager and cluster issuer
    become: false
    shell: |
      kubectl create ns cert-manager
      helm repo add jetstack https://charts.jetstack.io
      helm repo update
      kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.6.0/cert-manager.crds.yaml
      helm install cert-manager jetstack/cert-manager --namespace cert-manager --version v1.6.0 --debug --wait --timeout 15m
      kubectl apply -f /home/ubuntu/tls-cluster-issuer-prod.yml
